{
    "scripts": {
        "docker-login": "aws ecr get-login-password --profile ${AWS_PROFILE} --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_USER}.dkr.ecr.${AWS_REGION}.amazonaws.com",
        "ecr-repositories": "aws ecr describe-repositories --profile ${AWS_PROFILE} --repository-names app nginx-ecs-service-discovery",
        "build": "npm run build-app && npm run build-nginx",
        "build-app": "cd ../app && npm run build",
        "build-nginx": "cd nginx-ecs-service-discovery && npm run build",
        "ecr-create-repos": "npm run ecr-create-app && npm run ecr-create-nginx",
        "ecr-create-app": "cd ../app && npm run create-repo",
        "ecr-create-nginx": "cd nginx-ecs-service-discovery && npm run create-repo",
        "ecr-tag-repos": "npm run ecr-tag-app && npm run ecr-tag-nginx",
        "ecr-tag-app": "cd ../app && npm run tag",
        "ecr-tag-nginx": "cd nginx-ecs-service-discovery && npm run tag",
        "ecr-push-repos": "npm run ecr-push-app && npm run ecr-push-nginx",
        "ecr-push-app": "cd ../app && npm run push",
        "ecr-push-nginx": "cd nginx-ecs-service-discovery && npm run push",
        "ecs-configure": "ecs-cli configure --cluster ecs-service-discovery-stack --default-launch-type FARGATE --config-name  ecs-service-discovery-stack ",
        "ecs-configure-profile": "ecs-cli configure profile --access-key ${AWS_ACCESS_KEY} --secret-key ${AWS_SECRET_KEY} --profile-name ecs-service-discovery-stack",
        "cluster-create": "ecs-cli up --cluster-config ecs-service-discovery-stack --ecs-profile ecs-service-discovery-stack --capability-iam --force",
        "cluster-create-old": "ecs-cli up --cluster-config ecs-service-discovery-stack --ecs-profile ecs-service-discovery-stack --keypair notes-app-key-pair --instance-type t2.micro --capability-iam --force --size 2",
        "cluster-status": "ecs-cli ps --cluster-config ecs-service-discovery-stack --ecs-profile ecs-service-discovery-stack",
        "cluster-down": "ecs-cli down --force --cluster-config ecs-service-discovery-stack --ecs-profile ecs-service-discovery-stack ",
        "svc-backend-up": "cd backend && ecs-cli compose --project-name backend service up --private-dns-namespace tutorial --vpc ${VPC_ID}   --cluster ecs-service-discovery-stack --force-deployment",
        "svc-backend-up-old": "cd backend && ecs-cli compose --project-name backend service up --private-dns-namespace tutorial --vpc ${VPC_ID}  --enable-service-discovery --container-name app  --container-port 3000 --cluster ecs-service-discovery-stack --force-deployment",
        "svc-backend-down": "cd backend && ecs-cli compose --project-name backend service down --cluster ecs-service-discovery-stack",
        "svc-frontend-up": "cd frontend && ecs-cli compose --project-name frontend service up --private-dns-namespace tutorial --vpc ${VPC_ID}  --cluster ecs-service-discovery-stack --force-deployment",
        "svc-frontend-up-old": "cd frontend && ecs-cli compose --project-name frontend service up --private-dns-namespace tutorial --vpc ${VPC_ID}  --enable-service-discovery --container-name nginx --container-port 80 --cluster ecs-service-discovery-stack --force-deployment",
        "svc-frontend-down": "cd frontend && ecs-cli compose --project-name frontend service down --cluster ecs-service-discovery-stack"
    }
}